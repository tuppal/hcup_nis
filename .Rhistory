prop_nohs=nohs_afact/n,
prop_hs=hs_afact/n,
prop_coll=coll_afact/n,
med_inc=median(INCWAGE))
#test
puma_count1<-acs_tobeaggr %>%
dplyr::filter(state_name=="FLORIDA")%>%
dplyr::arrange(PUMA)%>%
dplyr::mutate(PUMA=as.numeric(PUMA),
whi=ifelse(RACE_co=="White, non-hispanic",1,0),
bla=ifelse(RACE_co=="Black, non-hispanic",1,0),
hisp=ifelse(RACE_co=="Hispanic, any race",1,0),
no_hs=ifelse(EDUCD %in% c(10:61), 1,0),
hs=ifelse(EDUCD %in% c(62:64), 1,0),
coll=ifelse(EDUCD %in% c(65:90, 100:116), 1,0)) %>%
dplyr::group_by(PUMA) %>%
dplyr::summarise(mean_age=mean(AGE),
n_white= sum(whi),
n_black= sum(bla),
n_hisp= sum(hisp),
n_nohs= sum(no_hs),
n_hs= sum(hs),
n_coll= sum(coll),
n = n())%>%
dplyr::mutate(acs_tobeaggr$AFACT=as.numeric(acs_tobeaggr$AFACT),
n=as.numeric(n))%>%
dplyr::arrange(ZIP)%>%
dplyr::group_by(ZIP) %>%
dplyr::summarise(#mean_age=mean(AGE),
white_afact= sum(n_white*AFACT),
black_afact= sum(n_black*AFACT),
hisp_afact= sum(n_hisp*AFACT),
nohs_afact= sum(n_nohs*AFACT),
hs_afact= sum(n_hs*AFACT),
coll_afact= sum(n_coll*AFACT),
n = sum(n*AFACT))%>%
dplyr::mutate(prop_w=white_afact/n,
prop_b=black_afact/n,
prop_his=hisp_afact/n,
prop_nohs=nohs_afact/n,
prop_hs=hs_afact/n,
prop_coll=coll_afact/n,
med_inc=median(INCWAGE))
#test
puma_count1<-acs_tobeaggr %>%
dplyr::filter(state_name=="FLORIDA")%>%
dplyr::arrange(PUMA)%>%
dplyr::mutate(PUMA=as.numeric(PUMA),
whi=ifelse(RACE_co=="White, non-hispanic",1,0),
bla=ifelse(RACE_co=="Black, non-hispanic",1,0),
hisp=ifelse(RACE_co=="Hispanic, any race",1,0),
no_hs=ifelse(EDUCD %in% c(10:61), 1,0),
hs=ifelse(EDUCD %in% c(62:64), 1,0),
coll=ifelse(EDUCD %in% c(65:90, 100:116), 1,0)) %>%
dplyr::group_by(PUMA) %>%
dplyr::summarise(mean_age=mean(AGE),
n_white= sum(whi),
n_black= sum(bla),
n_hisp= sum(hisp),
n_nohs= sum(no_hs),
n_hs= sum(hs),
n_coll= sum(coll),
n = n())%>%
dplyr::ungroup()
#test
puma_count1<-acs_tobeaggr %>%
dplyr::filter(state_name=="FLORIDA")%>%
dplyr::arrange(PUMA)%>%
dplyr::mutate(PUMA=as.numeric(PUMA),
whi=ifelse(RACE_co=="White, non-hispanic",1,0),
bla=ifelse(RACE_co=="Black, non-hispanic",1,0),
hisp=ifelse(RACE_co=="Hispanic, any race",1,0),
no_hs=ifelse(EDUCD %in% c(10:61), 1,0),
hs=ifelse(EDUCD %in% c(62:64), 1,0),
coll=ifelse(EDUCD %in% c(65:90, 100:116), 1,0)) %>%
dplyr::group_by(PUMA) %>%
dplyr::summarise(mean_age=mean(AGE),
n_white= sum(whi),
n_black= sum(bla),
n_hisp= sum(hisp),
n_nohs= sum(no_hs),
n_hs= sum(hs),
n_coll= sum(coll),
n = n())%>%
dplyr::ungroup()%>%
dplyr::mutate(AFACT=as.numeric(AFACT),
n=as.numeric(n))%>%
dplyr::arrange(ZIP)%>%
dplyr::group_by(ZIP) %>%
dplyr::summarise(#mean_age=mean(AGE),
white_afact= sum(n_white*AFACT),
black_afact= sum(n_black*AFACT),
hisp_afact= sum(n_hisp*AFACT),
nohs_afact= sum(n_nohs*AFACT),
hs_afact= sum(n_hs*AFACT),
coll_afact= sum(n_coll*AFACT),
n = sum(n*AFACT))%>%
dplyr::mutate(prop_w=white_afact/n,
prop_b=black_afact/n,
prop_his=hisp_afact/n,
prop_nohs=nohs_afact/n,
prop_hs=hs_afact/n,
prop_coll=coll_afact/n,
med_inc=median(INCWAGE))
View(acs_aggr)
acs_aggr<- test1 %>%
dplyr::filter(state_name=="FLORIDA")%>%
dplyr::mutate(AFACT=as.numeric(AFACT),
n=as.numeric(n))%>%
dplyr::arrange(ZIP)%>%
dplyr::group_by(ZIP) %>%
dplyr::summarise(#mean_age=mean(AGE),
white_afact= sum(n_white*AFACT),
black_afact= sum(n_black*AFACT),
hisp_afact= sum(n_hisp*AFACT),
nohs_afact= sum(n_nohs*AFACT),
hs_afact= sum(n_hs*AFACT),
coll_afact= sum(n_coll*AFACT),
n = sum(n*AFACT))%>%
dplyr::mutate(prop_w=white_afact/n,
prop_b=black_afact/n,
prop_his=hisp_afact/n,
prop_nohs=nohs_afact/n,
prop_hs=hs_afact/n,
prop_coll=coll_afact/n,
med_inc=median(INCWAGE))
library(syrvr)
library(srvyr)
library(srvyr)
if(!require(srvyr)){
install.packages("srvyr")
library(srvyr)
}
#in cluster I believe you would merge the zips into the full file, take the large dataset and push into svy object, then aggregate by zip in syrvr
acs_design<-svydesign(
id = ~ CLUSTER ,
strata = ~ STRATA,
data = test,
weight = ~ PERWT,
nest = TRUE
)
#test merging with survey object
test<-acs_tobeaggr
test<-test[sample(nrow(test), nrow(test)/20), ]
#subset for variables to improve processing time
test<-test %>% select(CLUSTER, STRATA, PERWT, RACE_co, EDUCD, state_name, in_data, PUMA, ZIP, AFACT, AGE)
?as_survey_design
#in cluster I believe you would merge the zips into the full file, take the large dataset and push into svy object, then aggregate by zip in syrvr
#with srvyr
acs_srvyr<- test%>%
as_survey_design(ids = CLUSTER, strata= STRATA, weight=PERWT, nest=T)
acs_srvyr %>%
filter(state_name=="FLORIDA")%>%
arrange(PUMA)%>%
mutate(PUMA=as.numeric(PUMA),
whi=ifelse(RACE_co=="White, non-hispanic",1,0),
bla=ifelse(RACE_co=="Black, non-hispanic",1,0),
hisp=ifelse(RACE_co=="Hispanic, any race",1,0),
no_hs=ifelse(EDUCD %in% c(10:61), 1,0),
hs=ifelse(EDUCD %in% c(62:64), 1,0),
coll=ifelse(EDUCD %in% c(65:90, 100:116), 1,0)) %>%
group_by(PUMA) %>%
summarise(mean_age=survey_mean(AGE),
n_white= survey_total(whi),
n_black= survey_total(bla),
n_hisp= survey_total(hisp),
n_nohs= survey_total(no_hs),
n_hs= survey_total(hs),
n_coll= survey_total(coll),
n = n())%>%
acs_design<-svydesign(
id = ~ CLUSTER ,
strata = ~ STRATA,
data = test,
weight = ~ PERWT,
nest = TRUE
)
acs_srvyr %>%
filter(state_name=="FLORIDA")%>%
arrange(PUMA)%>%
mutate(PUMA=as.numeric(PUMA),
whi=ifelse(RACE_co=="White, non-hispanic",1,0),
bla=ifelse(RACE_co=="Black, non-hispanic",1,0),
hisp=ifelse(RACE_co=="Hispanic, any race",1,0),
no_hs=ifelse(EDUCD %in% c(10:61), 1,0),
hs=ifelse(EDUCD %in% c(62:64), 1,0),
coll=ifelse(EDUCD %in% c(65:90, 100:116), 1,0)) %>%
group_by(PUMA) %>%
summarise(mean_age=survey_mean(AGE),
n_white= survey_total(whi),
n_black= survey_total(bla),
n_hisp= survey_total(hisp),
n_nohs= survey_total(no_hs),
n_hs= survey_total(hs),
n_coll= survey_total(coll),
n = n())%>%
acs_design<-svydesign(
id = ~ CLUSTER ,
strata = ~ STRATA,
data = test,
weight = ~ PERWT,
nest = TRUE
)
acs_srvyr %>%
filter(state_name=="FLORIDA")%>%
arrange(PUMA)%>%
mutate(PUMA=as.numeric(PUMA),
whi=ifelse(RACE_co=="White, non-hispanic",1,0),
bla=ifelse(RACE_co=="Black, non-hispanic",1,0),
hisp=ifelse(RACE_co=="Hispanic, any race",1,0),
no_hs=ifelse(EDUCD %in% c(10:61), 1,0),
hs=ifelse(EDUCD %in% c(62:64), 1,0),
coll=ifelse(EDUCD %in% c(65:90, 100:116), 1,0)) %>%
group_by(PUMA) %>%
summarise(mean_age=survey_mean(AGE),
n_white= survey_total(whi),
n_black= survey_total(bla),
n_hisp= survey_total(hisp),
n_nohs= survey_total(no_hs),
n_hs= survey_total(hs),
n_coll= survey_total(coll),
n = n())
acs_srvyr %>%
filter(state_name=="FLORIDA")%>%
mutate(PUMA=as.numeric(PUMA),
whi=ifelse(RACE_co=="White, non-hispanic",1,0),
bla=ifelse(RACE_co=="Black, non-hispanic",1,0),
hisp=ifelse(RACE_co=="Hispanic, any race",1,0),
no_hs=ifelse(EDUCD %in% c(10:61), 1,0),
hs=ifelse(EDUCD %in% c(62:64), 1,0),
coll=ifelse(EDUCD %in% c(65:90, 100:116), 1,0)) %>%
group_by(PUMA) %>%
summarise(mean_age=survey_mean(AGE),
n_white= survey_total(whi),
n_black= survey_total(bla),
n_hisp= survey_total(hisp),
n_nohs= survey_total(no_hs),
n_hs= survey_total(hs),
n_coll= survey_total(coll),
n = n())
detach(package:plyr)
acs_unwt_aggr<- acs_puma %>%
dplyr::filter(state_name=="FLORIDA")%>%
dplyr::mutate(AFACT=as.numeric(AFACT),
n=as.numeric(n))%>%
dplyr::arrange(ZIP)%>%
dplyr::group_by(ZIP) %>%
dplyr::summarise(#mean_age=mean(AGE),
white_afact= sum(n_white*AFACT),
black_afact= sum(n_black*AFACT),
hisp_afact= sum(n_hisp*AFACT),
nohs_afact= sum(n_nohs*AFACT),
hs_afact= sum(n_hs*AFACT),
coll_afact= sum(n_coll*AFACT),
n = sum(n*AFACT))%>%
dplyr::mutate(prop_w=white_afact/n,
prop_b=black_afact/n,
prop_his=hisp_afact/n,
prop_nohs=nohs_afact/n,
prop_hs=hs_afact/n,
prop_coll=coll_afact/n,
med_inc=median(INCWAGE))
acs_srvyr$variables$state_name
detach(package:plyr)
acs_srvyr %>%
filter(state_name=="FLORIDA")%>%
mutate(PUMA=as.numeric(PUMA),
whi=ifelse(RACE_co=="White, non-hispanic",1,0),
bla=ifelse(RACE_co=="Black, non-hispanic",1,0),
hisp=ifelse(RACE_co=="Hispanic, any race",1,0),
no_hs=ifelse(EDUCD %in% c(10:61), 1,0),
hs=ifelse(EDUCD %in% c(62:64), 1,0),
coll=ifelse(EDUCD %in% c(65:90, 100:116), 1,0)) %>%
group_by(PUMA) %>%
summarise(mean_age=survey_mean(AGE),
n_white= survey_total(whi),
n_black= survey_total(bla),
n_hisp= survey_total(hisp),
n_nohs= survey_total(no_hs),
n_hs= survey_total(hs),
n_coll= survey_total(coll),
n = n())
acs_puma_wt<-acs_srvyr %>%
filter(state_name=="FLORIDA")%>%
mutate(PUMA=as.numeric(PUMA),
whi=ifelse(RACE_co=="White, non-hispanic",1,0),
bla=ifelse(RACE_co=="Black, non-hispanic",1,0),
hisp=ifelse(RACE_co=="Hispanic, any race",1,0),
no_hs=ifelse(EDUCD %in% c(10:61), 1,0),
hs=ifelse(EDUCD %in% c(62:64), 1,0),
coll=ifelse(EDUCD %in% c(65:90, 100:116), 1,0),
all=1) %>%
group_by(PUMA) %>%
summarise(mean_age=survey_mean(AGE),
n_white= survey_total(whi),
n_black= survey_total(bla),
n_hisp= survey_total(hisp),
n_nohs= survey_total(no_hs),
n_hs= survey_total(hs),
n_coll= survey_total(coll),
n = survey_total(all))
View(acs_puma_wt)
acs_puma_wt1<-acs_puma_wt%>%
select(. -contains("se"))
acs_puma_wt1<-acs_puma_wt%>%
select(-contains("se"))
View(acs_puma_wt1)
acs_puma_wt1<-acs_puma_wt%>%
select(-contains("_se"))
View(acs_puma_wt1)
acs_puma_wt1<-acs_puma_wt%>%
select(-ends_with("_se"))
View(acs_puma_wt1)
colnames(acs_puma_wt1)
View(acs_puma_wt1)
colnames(acs_puma_wt1)<-c("PUMA", "AGE", "AGE_se", "n_white", "n_white_se",
"n_black", "n_black_se", "n_hisp", "n_hisp_se",
"n_nohs", "n_nohs_se", "n_hs", "n_hs_se", "n_coll",
"n_coll_se", "n", "n_se")
colnames(acs_puma_wt1)<-c("PUMA", "AGE", "AGE_se", "n_white", "n_white_se",
"n_black", "n_black_se", "n_hisp", "n_hisp_se",
"n_nohs", "n_nohs_se", "n_hs", "n_hs_se", "n_coll",
"n_coll_se", "n", "n_se")
acs_puma_wt1<-as.data.frame(acs_puma_wt1)
View(acs_puma_wt1)
colnames(acs_puma_wt1)
acs_puma_wt1<-as.tibble(acs_puma_wt1)
colnames(acs_puma_wt1)
View(acs_puma_wt1)
acs_puma_wt1<-data.frame(acs_puma_wt1)
colnames(acs_puma_wt1)
View(acs_puma_wt1)
dim(acs_puma_wt1)
View(acs_puma_wt1)
acs_puma_wt1<-as.table(acs_puma_wt1)
acs_puma_wt1$colnames<-c("PUMA", "AGE", "AGE_se", "n_white", "n_white_se",
"n_black", "n_black_se", "n_hisp", "n_hisp_se",
"n_nohs", "n_nohs_se", "n_hs", "n_hs_se", "n_coll",
"n_coll_se", "n", "n_se")
acs_puma_wt1$col<-c("PUMA", "AGE", "AGE_se", "n_white", "n_white_se",
"n_black", "n_black_se", "n_hisp", "n_hisp_se",
"n_nohs", "n_nohs_se", "n_hs", "n_hs_se", "n_coll",
"n_coll_se", "n", "n_se")
dim(acs_puma_wt)
View(acs_puma_wt)
head(acs_puma_wt)
acs_puma_wt_df<-as.data.frame(acs_puma_wt)
View(acs_puma_wt1)
#test merging using this tibble
#merge aggregated puma counts by PUMA, select for variables needed to generate aggregated zip counts
merge_state<-acs_tobeaggr %>%
dplyr::filter(state_name=="FLORIDA")
acs_puma_wt1<-merge(merge_state, acs_puma_wt1, by="PUMA", type="left")
acs_puma_wt1<-as.data.frame(acs_puma_wt$out$PUMA)
View(acs_puma_wt1)
acs_puma_wt1<-as.data.frame(acs_puma_wt$out)
View(acs_puma_wt1)
acs_puma_wt1<-as.data.frame(acs_puma_wt$out)%>%
select(-ends_with("_se"))
dim(acs_puma_wt1)
View(acs_puma_wt)
colnames(acs_puma_wt)
colnames(acs_puma_wt1)
acs_puma<-merge(merge_state, acs_puma_wt, by="PUMA", type="left")
acs_puma_wt<-as.data.frame(acs_puma_wt$out)%>%
select(-ends_with("_se"))
dim(acs_puma_wt1)
dim(acs_puma_wt)
acs_puma<-merge(merge_state, acs_puma_wt, by="PUMA", type="left")
acs_puma<-acs_puma %>%
select(c(PUMA, state_name, mean_age, n_white,n_black, n_hisp, n_nohs, n_hs, n_coll, n, ZIP, AFACT))
View(acs_puma)
acs_wt_aggr<- acs_puma %>%
dplyr::filter(state_name=="FLORIDA")%>%
dplyr::mutate(AFACT=as.numeric(AFACT),
n=as.numeric(n))%>%
dplyr::arrange(ZIP)%>%
dplyr::group_by(ZIP) %>%
dplyr::summarise(#mean_age=mean(AGE),
white_afact= sum(n_white*AFACT),
black_afact= sum(n_black*AFACT),
hisp_afact= sum(n_hisp*AFACT),
nohs_afact= sum(n_nohs*AFACT),
hs_afact= sum(n_hs*AFACT),
coll_afact= sum(n_coll*AFACT),
n = sum(n*AFACT))%>%
dplyr::mutate(prop_w=white_afact/n,
prop_b=black_afact/n,
prop_his=hisp_afact/n,
prop_nohs=nohs_afact/n,
prop_hs=hs_afact/n,
prop_coll=coll_afact/n,
med_inc=median(INCWAGE))
#aggregate by zip code
acs_wt_aggr<- acs_puma %>%
dplyr::filter(state_name=="FLORIDA")%>%
dplyr::mutate(AFACT=as.numeric(AFACT),
n=as.numeric(n))%>%
dplyr::arrange(ZIP)%>%
dplyr::group_by(ZIP) %>%
dplyr::summarise(#mean_age=mean(AGE),
white_afact= sum(n_white*AFACT),
black_afact= sum(n_black*AFACT),
hisp_afact= sum(n_hisp*AFACT),
nohs_afact= sum(n_nohs*AFACT),
hs_afact= sum(n_hs*AFACT),
coll_afact= sum(n_coll*AFACT),
n = sum(n*AFACT))%>%
dplyr::mutate(prop_w=white_afact/n,
prop_b=black_afact/n,
prop_his=hisp_afact/n,
prop_nohs=nohs_afact/n,
prop_hs=hs_afact/n,
prop_coll=coll_afact/n)
View(acs_wt_aggr)
#test merging with survey object
test<-acs_tobeaggr
#subset for variables to improve processing time
test<-test %>% select(CLUSTER, STRATA, PERWT, RACE_co, EDUCD, state_name, in_data, PUMA, ZIP, AFACT, AGE)
library(survey)
library(srvyr)
#in cluster I believe you would merge the zips into the full file, take the large dataset and push into svy object, then aggregate by zip in syrvr
#with srvyr
acs_srvyr<- test%>%
as_survey_design(ids = CLUSTER, strata= STRATA, weight=PERWT, nest=T)
detach(package:plyr)
acs_puma_wt<-acs_srvyr %>%
filter(state_name=="FLORIDA")%>%
mutate(PUMA=as.numeric(PUMA),
whi=ifelse(RACE_co=="White, non-hispanic",1,0),
bla=ifelse(RACE_co=="Black, non-hispanic",1,0),
hisp=ifelse(RACE_co=="Hispanic, any race",1,0),
no_hs=ifelse(EDUCD %in% c(10:61), 1,0),
hs=ifelse(EDUCD %in% c(62:64), 1,0),
coll=ifelse(EDUCD %in% c(65:90, 100:116), 1,0),
all=1) %>%
group_by(PUMA) %>%
summarise(mean_age=survey_mean(AGE),
n_white= survey_total(whi),
n_black= survey_total(bla),
n_hisp= survey_total(hisp),
n_nohs= survey_total(no_hs),
n_hs= survey_total(hs),
n_coll= survey_total(coll),
n = survey_total(all))
acs_puma_wt<-as.data.frame(acs_puma_wt$out)%>%
select(-ends_with("_se"))
dim(acs_puma_wt)
#merge aggregated puma counts by PUMA, select for variables needed to generate aggregated zip counts
merge_state<-acs_tobeaggr %>%
dplyr::filter(state_name=="FLORIDA")
acs_puma<-merge(merge_state, puma_count, by="PUMA", type="left")
acs_puma<-acs_puma %>%
select(c(PUMA, state_name, mean_age, n_white,n_black, n_hisp, n_nohs, n_hs, n_coll, n, ZIP, AFACT))
acs_unwt_aggr<- acs_puma %>%
dplyr::filter(state_name=="FLORIDA")%>%
dplyr::mutate(AFACT=as.numeric(AFACT),
n=as.numeric(n))%>%
dplyr::arrange(ZIP)%>%
dplyr::group_by(ZIP) %>%
dplyr::summarise(#mean_age=mean(AGE),
white_afact= sum(n_white*AFACT),
black_afact= sum(n_black*AFACT),
hisp_afact= sum(n_hisp*AFACT),
nohs_afact= sum(n_nohs*AFACT),
hs_afact= sum(n_hs*AFACT),
coll_afact= sum(n_coll*AFACT),
n = sum(n*AFACT))%>%
dplyr::mutate(prop_w=white_afact/n,
prop_b=black_afact/n,
prop_his=hisp_afact/n,
prop_nohs=nohs_afact/n,
prop_hs=hs_afact/n,
prop_coll=coll_afact/n,
med_inc=median(INCWAGE))
#aggregate by zip code
acs_wt_aggr<- acs_puma %>%
dplyr::filter(state_name=="FLORIDA")%>%
dplyr::mutate(AFACT=as.numeric(AFACT),
n=as.numeric(n))%>%
dplyr::arrange(ZIP)%>%
dplyr::group_by(ZIP) %>%
dplyr::summarise(#mean_age=mean(AGE),
white_afact= sum(n_white*AFACT),
black_afact= sum(n_black*AFACT),
hisp_afact= sum(n_hisp*AFACT),
nohs_afact= sum(n_nohs*AFACT),
hs_afact= sum(n_hs*AFACT),
coll_afact= sum(n_coll*AFACT),
n = sum(n*AFACT))%>%
dplyr::mutate(prop_w=white_afact/n,
prop_b=black_afact/n,
prop_his=hisp_afact/n,
prop_nohs=nohs_afact/n,
prop_hs=hs_afact/n,
prop_coll=coll_afact/n)
View(acs_wt_aggr)
getwd()
setwd(repo)
setwd(paste0(repo, "/imputation")
dir(paste0(repo, "/imputation")))
dir(paste0(repo, "/imputation"))
dir.create(paste0(repo, "/imputation", "/acs_zip"))
dir(paste0(repo, "imputation"))
dir(paste0(repo, "/imputation"))
acs_zip_path<-(paste0(repo, "/imputation", "/acs_zip"))
saveRDS(acs_wt_aggr, paste0(acs_zip_path, "FLORIDA", "_zip.RDS"))
acs_zip_path<-(paste0(repo, "/imputation", "/acs_zip/"))
saveRDS(acs_wt_aggr, paste0(acs_zip_path, "FL", "_2008","_zip.RDS"))
View(count_table_neds)
View(acs_wt_aggr)
hist(acs_wt_aggr$n)
